from flask import Flask, request, render_template, redirect, flash, session
from flask_debugtoolbar import DebugToolbarExtension
from surveys import satisfaction_survey as my_survey

# Constant to store responses in the session
RESPONSES_KEY = "user_responses"

app = Flask(__name__)
app.config['SECRET_KEY'] = "my-secret-key"
app.config['DEBUG_TB_INTERCEPT_REDIRECTS'] = False

debug = DebugToolbarExtension(app)

@app.route("/")
def show_survey_intro():
    """Display the introduction to the survey."""

    return render_template("survey_intro.html", survey=my_survey)

@app.route("/start_survey", methods=["POST"])
def start_survey():
    """Initialize the survey and clear previous responses."""

    session[RESPONSES_KEY] = []

    return redirect("/question/0")

@app.route("/submit_answer", methods=["POST"])
def process_answer():
    """Save user responses and navigate to the next question."""

    choice = request.form['answer']
    responses = session.get(RESPONSES_KEY, [])
    responses.append(choice)
    session[RESPONSES_KEY] = responses

    if len(responses) == len(my_survey.questions):
        return redirect("/complete_survey")
    else:
        return redirect(f"/question/{len(responses)}")

@app.route("/question/<int:qid>")
def display_current_question(qid):
    """Display the current survey question."""

    responses = session.get(RESPONSES_KEY)

    if responses is None:
        return redirect("/")

    if len(responses) == len(my_survey.questions):
        return redirect("/complete_survey")

    if len(responses) != qid:
        flash(f"Invalid question ID: {qid}.")
        return redirect(f"/question/{len(responses)}")

    current_question = my_survey.questions[qid]
    return render_template("survey_question.html", question_num=qid, question=current_question)

@app.route("/complete_survey")
def show_survey_completion():
    """Display the survey completion page."""

    return render_template("survey_completion.html")
